#!/bin/bash

PLUGIN_DIR="$HOME/.local/state/zsh/plugins"

# COPY FILE CONTENT
function copyfile {
    emulate -L zsh
    xclip -sel clip $1
}

function filter_file_name() {
    awk -F '/' '{print $NF}' <<<$1
}

function source_file() {
    [ -f "$PLUGIN_DIR/$1" ] && source "$PLUGIN_DIR/$1"
}

# TO CHECK WEATHER PLUGIN FILE OR DIR EXISTS, IF NOT IT WILL AUTOMATICALLY DOWNLOAD AND ENABLE THEM. IN SHORT IT'S A MINIMAL PLUGIN MANAGER
function add_plugin() {

    if [ $1 = "--singlefile" ]; then
        local PLUGIN_NAME="$(filter_file_name $2)"

        if [[ -f "$PLUGIN_DIR/$(filter_file_name $2)" ]]; then
            source_file "$PLUGIN_NAME"
        else
            wget -P $PLUGIN_DIR "https://raw.githubusercontent.com/${2}"
        fi
    else
        local PLUGIN_NAME="$(filter_file_name $1)/$(filter_file_name $1)"

        if [[ -d "${PLUGIN_DIR}/$(filter_file_name $1)" ]]; then
            source_file "$PLUGIN_NAME.zsh" ||
                source_file "$PLUGIN_NAME.plugin.zsh"
        else
            git clone "https://github.com/${1}" "${PLUGIN_DIR}/$(filter_file_name $1)"
        fi
    fi
}

# SAME AS PLUGIN MANAGER BUT YOU CAN PASS A PLUGINS ARRAY TO THIS FUNCTION
function add_plugins() {
    local singlefile_enabled=false
    if [ $1 = "--singlefile" ]; then
        singlefile_enabled=true
        shift
    fi
    for file in "${@}"; do
        if [ $singlefile_enabled = true ]; then
            add_plugin --singlefile $file
        else
            add_plugin $file
        fi
    done
}

function beautify-files() {
    vared -p "enter range -> " -c range
    vared -p "enter prefix -> " -c prefix
    for file in $1/*; do
        local extension=$(filter_file_name $file | cut -d '.' -f 2)
        mv $file $1/${prefix}-${range}.${extension}
        ((range = range + 1))
    done
}
